#!/bin/bash

init()
{
    DEVICE=/dev/ttyUSB0
    BAUD_RATE=115200
    
    DIRECTORY=$(cd `dirname $0` && pwd)
    HOME=$DIRECTORY/..
    LOG=log
    RESULT=TABLE.md

    TEST=test
    EMPTY=empty.c
    MEM=task.c

    FREERTOS=freeRTOS
    FREERTOS_MAIN=main/main.c
    FREERTOS_MAKE="make"
    FREERTOS_FLASH="make flash"

    MONGOOSE=mongoose
    MONGOOSE_MAIN=src/main.c
    MONGOOSE_MAKE="mos build --platform esp32"
    MONGOOSE_FLASH="mos flash"

    exec 3>&-
    exec 3<>$DEVICE
}

logging()
{
    file=$1
    stty -F $DEVICE $BAUD_RATE raw

    read line <&3
    until [[ $line == ---* || $line == Error:* ]] ; do
        read line <&3
    done

    if [[ $line == Error:* ]] ; then
        echo ${line::-1} > $file
        return
    fi

    rm -f $file
    echo ${line::-1} >> $file    # ---Test name---
    read line <&3
    echo ${line::-1} >> $file    # CPU frequency
    read line <&3
    echo ${line::-1} >> $file    # Tick rate
    read line <&3
    echo ${line::-1} >> $file    # Iterations or Average

    if [[ $line != Iterations:* ]] ; then
        return
    fi

    iter=${line:12}
    iter=$(echo $iter | tr -d "\r\n")

    read line <&3
    echo ${line::-1} >> $file    # Average
    read line <&3
    echo ${line::-1} >> $file    # Variance

    for ((i = 1; i <= iter; i++)) ; do
        read line <&3
        until [[ $line == \#* ]] ; do
            echo ${line::-1} >> $file
            read line <&3
        done

        echo ${line::-1} >> $file
    done
}

system_test()
{
    mem_func=$1
    if [[ $mem_func == mem ]] ; then
        sys_dir=$FREERTOS
        sys_main=$FREERTOS_MAIN
        sys_make=$FREERTOS_MAKE
        sys_flash=$FREERTOS_FLASH

        cd $sys_dir
        make defconfig
    else
        sys_dir=$MONGOOSE
        sys_main=$MONGOOSE_MAIN
        sys_make=$MONGOOSE_MAKE
        sys_flash=$MONGOOSE_FLASH

        cd $sys_dir
    fi


    for i in `ls $TEST/*.c` ; do
        name=${i:${#TEST}+1}
        name=${name::-2}
        
        cp -r $i $sys_main
        $sys_make

        if [[ $i != $TEST/$EMPTY && $i != $TEST/$MEM ]] ; then
            $sys_flash
            logging $HOME/$LOG/$sys_dir/$name.log

            while read -t 1 <&3 ; do
                read -t 0 <&3
            done
        else
            $mem_func $HOME/$LOG/$sys_dir/$name.log
        fi
    done

    cp -r $TEST/$EMPTY $sys_main
    cd ..
}

mem()
{
    file=$1
    byte=0
    
    for i in `find -name *.bin` ; do
        bin=`du -b $i`
        bin=${bin%$i}
        byte=$(($byte + ${bin::-1}))
    done
    
    echo "$byte bytes" > $file
}

mem_mongoose()
{
    FW=build/fw.zip
    ZIP=build/zip
    
    unzip -o $FW -d $ZIP
    
    mem $1
}

line()
{
    freertos=$1
    mongoose=$2
    
    freertos_average=""
    freertos_variance=""
    
    mongoose_average=""
    mongoose_variance=""
    
    name=`head -n 1 $freertos`
    if [[ $name == Error:* ]] ; then
        freertos_average="*error*"
        name=`head -n 1 $mongoose`
        
        if [[ $name == Error:* ]] ; then
            return
        fi
    fi
    name=${name//---/}
    name=$(echo $name | tr -d "\r\n")

    if [[ `head -n 1 $mongoose` == Error:* ]] ; then
        mongoose_average="*error*"
    fi


    if [[ $freertos_average != "*error*" ]] ; then
        freertos_average=`head -n 4 $freertos | tail -n 1`

        if [[ $freertos_average == Iterations:* ]] ; then
            freertos_average=`head -n 5 $freertos | tail -n 1`

            freertos_variance=`head -n 6 $freertos | tail -n 1`
            freertos_variance=$(echo $freertos_variance | tr -d "\r\n")
            freertos_variance="*${freertos_variance:10}*"
        fi
        freertos_average=$(echo $freertos_average | tr -d "\r\n")
        freertos_average="*${freertos_average:9}*"
    fi
    
    if [[ $mongoose_average != "*error*" ]] ; then
        mongoose_average=`head -n 4 $mongoose | tail -n 1`

        if [[ $mongoose_average == Iterations:* ]] ; then
            mongoose_average=`head -n 5 $mongoose | tail -n 1`

            mongoose_variance=`head -n 6 $mongoose | tail -n 1`
            mongoose_variance=$(echo $mongoose_variance | tr -d "\r\n")
            mongoose_variance="*${mongoose_variance:10}*"
        fi
        mongoose_average=$(echo $mongoose_average | tr -d "\r\n")
        mongoose_average="*${mongoose_average:9}*"
    fi

    echo "| $name | ${freertos_average/us/µs} | ${freertos_variance/us/µs} | ${mongoose_average/us/µs} | ${mongoose_variance/us/µs} |" >> $RESULT
}

table()
{
    echo "# Result table" > $RESULT
    echo "This is autogenerated table of testing ESP32. Testing systems are FreeRTOS and Mongoose OS." >> $RESULT

    time=`date "+%H:%M %d.%m.%Y"`
    echo -e "\nCurrent time: $time. <br/> <br/>\n" >> $RESULT
    
    echo "| Description | FreeRTOS (Average) | FreeRTOS (Variance) | Mongoose OS (Average) | Mongoose OS (Variance) |" >> $RESULT
    echo "| --- | ---: | ---: | ---: | ---: |" >> $RESULT

    for i in `ls $LOG/$FREERTOS/*.log | sort -V` ; do
        name=${i:${#LOG}+${#FREERTOS}+2}
        
        if [[ ${name::-4} != ${EMPTY::-2} && ${name::-4} != ${MEM::-2} ]] ; then
            if [ -f ${i/$FREERTOS/$MONGOOSE} ] ; then
                line $i ${i/$FREERTOS/$MONGOOSE}
            fi
        fi
    done
    
    freertos=`head -n 1 $LOG/$FREERTOS/${EMPTY::-2}.log`
    mongoose=`head -n 1 $LOG/$MONGOOSE/${EMPTY::-2}.log`
    echo "| Empty memory test | *$freertos* |  | *$mongoose* |  |" >> $RESULT
    
    freertos=`head -n 1 $LOG/$FREERTOS/${MEM::-2}.log`
    mongoose=`head -n 1 $LOG/$MONGOOSE/${MEM::-2}.log`
    echo "| Memory with task | *$freertos* |  | *$mongoose* |  |" >> $RESULT
}

main()
{
    init

    cd $HOME
    mkdir -p $LOG

    mkdir -p $LOG/$FREERTOS
    system_test mem

    mkdir -p $LOG/$MONGOOSE
    system_test mem_mongoose
    
    table
}

main $@
